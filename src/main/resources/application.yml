server:
  port: 8080

spring:
  application:
    name: login_project
  datasource:
    url: jdbc:postgresql://localhost:5432/login_project
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

security-project:
  secret-key: ${SECRET_KEY}

brevo:
  api-key: ${BREVO_API}

jwt:
  secret: ${JWT_SECRET}

create-default-users: ${CREATE_DEFAULT_USERS:false}

simulate-data: ${SIMULATE_DATA:false}

email-service:
  from: ${EMAIL_FROM}

front-end:
  url: ${FRONT_END_URL}

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never
  security:
    enabled: false

swagger:
  api:
    title: Login Backend API
    description: >
      This backend handles user authentication, account management, and role-based access control (RBAC).
      It securely encrypts user passwords using Bcrypt and ensures authentication and authorization
      through JWT and Refresh Tokens. The API provides endpoints for user registration, login,
      password recovery, and administrative actions with full Swagger documentation for easy testing
      and integration.
    version: 1.0.0
    contact:
      name: Felipe Babel
      url: "https://github.com/felipebabel/login-backend"
      email: "babelfelipe@gmail.com"
    tags:
      - name: Authentication
        description: "Endpoints for login, logout, and token management"
      - name: Users
        description: "Endpoints for account creation, profile management, and password recovery"
      - name: Admin
        description: "Administrative endpoints for managing users and system configuration"
      - name: Logs
        description: "Endpoints for retrieving activity logs and monitoring"
